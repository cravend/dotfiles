# Path to your oh-my-zsh installation.
export ZSH=$HOME/.dotfiles/zsh/ohmyzsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="cravend"

ZSH_COMPDUMP="${ZSH_CACHE_DIR}/.zcompdump-${HOST/.*/}-${ZSH_VERSION}"

# Autodark Configuration -- must be loaded before plugin
AUTODARK_LIGHT_THEME="tomorrow"
AUTODARK_DARK_THEME="tomorrow-night-eighties"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$HOME/.dotfiles/zsh/custom

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(yarn pyenv direnv zsh-autosuggestions)

# Custom aliases
if [[ -f "$HOME/.zshrc_custom" ]]; then
    source "$HOME/.zshrc_custom"
fi

export EDITOR=nvim

export FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd completion)

# Turn on ZSH
source $ZSH/oh-my-zsh.sh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Enable the virtualenv prompt
VIRTUAL_ENV_DISABLE_PROMPT=1

# Custom function to show git branch and status
git_prompt_info() {
    local branch
    branch=$(git symbolic-ref --short HEAD 2>/dev/null)
    if [ -n "$branch" ]; then
        local git_status=$(git status --porcelain 2>/dev/null | wc -l | tr -d ' ')
        if [ "$git_status" -gt 0 ]; then
            echo "%{$fg_bold[green]%}git:(%{$fg_bold[yellow]%}$branch%{$fg_bold[green]%})%{$fg_bold[green]%}±$git_status%{$reset_color%}"
        else
            echo "%{$fg_bold[green]%}git:(%{$fg_bold[yellow]%}$branch%{$fg_bold[green]%})%{$reset_color%}"
        fi
    else
        # Show commit hash if in a headless state
        local commit_hash=$(git rev-parse --short HEAD 2>/dev/null)
        if [ -n "$commit_hash" ]; then
            echo "%{$fg_bold[green]%}git:(%{$fg_bold[red]%}detached@$commit_hash%{$fg_bold[green]%})%{$reset_color%}"
        fi
    fi
}

# Function to show host if remote
show_remote_host() {
    if [[ $SSH_CONNECTION ]]; then
        echo "%{$fg_bold[green]%}%n@%m%{$reset_color%} "
    fi
}

show_pipenv_env_name() {
    if [[ -n "$PIPENV_ACTIVE" ]]; then
        # Extracting the environment name from the current directory name or Pipfile location
        local env_name=$(basename "$(pipenv --venv 2>/dev/null)" 2>/dev/null)
        echo "%{$fg_bold[blue]%}($env_name)%{$reset_color%} "
    fi
}

show_command_status() {
    echo " %(?.$fg[green]⏺.$fg[red]⏺) "
}

export ITERM2_SQUELCH_MARK=1
# Custom PS1 prompt including newline
PROMPT='$(show_command_status)$(show_pipenv_env_name)$(show_remote_host)%{$fg_bold[magenta]%}%~%{$reset_color%} $(git_prompt_info)
'

zle_highlight=(default:bold)
# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
